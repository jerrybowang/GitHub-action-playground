name: condiction scan

on:
  push:
    branches:
      - "**"


jobs:
  
  check-scan-configuration:
    runs-on: ubuntu-latest
    outputs:
        should_run: ${{ steps.check-branch.outputs.should_run }}
    steps:
        - name: sparse-checkout the config file
          uses: actions/checkout@v4
          with:
            sparse-checkout: |
                .github-management-mend.config
            sparse-checkout-cone-mode: false

        - name: Read config file for run_on_branches info
          id: read-config
          shell: bash
          run: |
            # check if the config file exists
            if [ -f .github-management-mend.config ]; then
                # grab the line
                branch_config=$(grep '^branches=' .github-management-mend.config) 

                if [[ -z "$branch_config" ]]; then
                    echo "branches=" >> $GITHUB_OUTPUT
                    echo "no branches config found in config file"
                else
                    echo "$branch_config" >> $GITHUB_OUTPUT
                    echo "$branch_config"
                fi
            else
                echo "github-management-mend.config not found"
            fi
        
        - name: Check if branch should run
          id: check-branch
          shell: bash
          run: |
            # get the current branch name
            current_branch=${GITHUB_REF#refs/heads/}
            echo "current_branch=$current_branch"

            should_run=false
            run_on_branches="${{ steps.read-config.outputs.branches }}"

            # fause safe default: if the config does not exist, the job should run regardless
            if [[ -z "$run_on_branches" ]]; then
                should_run=true
                echo "no run_on_branches config found in config file, job will run on all branches"
            else
                
                echo "run_on_branches=$run_on_branches"

                # split the run_on_branches list into an array
                IFS=' ' read -r -a branches <<< "$run_on_branches"

                # iterate over the branches
                for branch in "${branches[@]}"; do
                    # escape the following special characters: (){}+|
                    regex=$(echo "$branch" | sed "s/[(){}+|]/\\\\&/g")

                    # convert the branch name to a regex pattern
                    # replace . with \. ;; * with [^/]* ;; ? with .{1}
                    # ** will become [^/]*[^/]*  ;; hence the seconde sed command
                    regex=$(echo "$branch" | sed 's/\./\\./g; s/\*/[^\/]*/g; s/\?/.{1}/g')

                    # replace [^/]*[^/]*  with .*
                    regex=$(echo "$regex" | sed 's/\[\^\/\]\*\[\^\/\]\*/.*/g')

                    # finally, hanle the negation of a character set
                    # eg. [!abc] will become [^abc]
                    regex=$(echo "$regex" | sed 's/\[\!/\[\^/g')


                    # check if the current branch matches the pattern
                    # the following if block is for Github Actions's negate pattern

                    negate=false
                    # if there is a negte character "!"
                    if [[ $regex =~ ^! ]]; then
                        # remove the "!" character
                        regex=${regex:1}
                        negate=true
                    fi

                    # if the current branch matches the pattern and negate is false, set should_run to true
                    if [[ "$current_branch" =~ ^$regex$ ]] && [[ $negate == false ]]; then
                        should_run=true
                        break
                    fi
                done
            fi
            
            echo "should_run=$should_run" >> "$GITHUB_OUTPUT"
        




  scan:
    runs-on: ubuntu-latest
    needs: check-scan-configuration
    if: needs.check-scan-configuration.outputs.should_run == 'true'
    steps:
        - name: dummy action
          run: |
            echo "dummy mend scan"
